on:
  push:
    branches:
      - master
      - ci-changes

env:
  version: 0.0.0.${{github.run_number}}
jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      versionOut: ${{ steps.generateVersion.outputs.version }}
    steps:
      - id: generateVersion
        run: echo "version=0.0.${{ github.run_number }}" >> "$GITHUB_OUTPUT"
  backend:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: ubuntu-24.04-arm
    needs:
      - version
    env:
      DOCKER_SERVER_IMAGE_NAME: "ghcr.io/${{ github.repository }}/temp-backend:${{needs.version.outputs.versionOut}}-${{ matrix.arch }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - uses: actions/checkout@v4
      - run: make build-docker
      - run: docker push ${DOCKER_SERVER_IMAGE_NAME}
  
  backend-multi-arch:
    runs-on: ${{ matrix.runner }}
    needs:
      - backend
      - version
    env:
      DOCKER_SERVER_IMAGE_NAME: "ghcr.io/${{ github.repository }}/go-money-server:${{needs.version.outputs.versionOut}}"
      DOCKER_SERVER_TEMP_IMAGE_NAME: "ghcr.io/${{ github.repository }}/temp-backend:${{needs.version.outputs.versionOut}}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Create and push manifest
        run: |
          docker manifest create ${DOCKER_SERVER_IMAGE_NAME} \
            --amend ${DOCKER_SERVER_TEMP_IMAGE_NAME}-amd64 \
            --amend ${DOCKER_SERVER_TEMP_IMAGE_NAME}-arm64

          docker manifest push ${DOCKER_SERVER_IMAGE_NAME}
  frontend:
    runs-on: ubuntu-latest
    container: node:24-alpine
    needs:
      - version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install and build frontend
        working-directory: frontend
        run: npm install && npm run build
      - uses: actions/upload-artifact@v4
        with:
          compression-level: '6'
          path: frontend/dist/go-money
          overwrite: 'true'
          retention-days: 1
          name: 'go-money-browser'
  full:
    runs-on: ubuntu-latest
    needs:
      - backend
      - frontend
      - version
    env:
      DOCKER_SERVER_IMAGE_NAME: "ghcr.io/${{ github.repository }}/go-money-server:${{needs.version.outputs.versionOut}}"
      DOCKER_FULL_IMAGE_NAME: "ghcr.io/${{ github.repository }}/go-money-full:${{needs.version.outputs.versionOut}}"
      DOCKER_FULL_IMAGE_NAME_LATEST: "ghcr.io/${{ github.repository }}/go-money-full:latest"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: go-money-browser
      - run: ls
      - uses: docker/setup-buildx-action@v3
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - run: docker build -f ./build/Dockerfile.full --build-arg MAIN_IMAGE=${DOCKER_SERVER_IMAGE_NAME} -t ${DOCKER_FULL_IMAGE_NAME_LATEST} -t ${DOCKER_FULL_IMAGE_NAME}  .
      - run: docker push ${DOCKER_FULL_IMAGE_NAME}
      - run: docker push ${DOCKER_FULL_IMAGE_NAME_LATEST}
