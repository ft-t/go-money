services:
  app:
    image: ${REPO}:${TAG}
    hostname: app
    container_name: app
    restart: always
    env_file: .env
    pull_policy: always
    networks:
      - go-money
    ports:
      - "127.0.0.1:${GRPC_PORT}:${GRPC_PORT}"
    depends_on:
      - db
        
  db:
    image: postgres:latest
    hostname: db
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=500
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: ${DB_DB}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - go-money
    volumes:
      - ./db_data:/var/lib/postgresql/data:rw
  db-init:
    image: postgres:latest
    container_name: db-init
    restart: on-failure
    depends_on:
      - db
    entrypoint: >
      bash -c "
      until pg_isready -h ${DB_HOST} -U ${DB_USER}; do sleep 1; done;
      psql -h ${DB_HOST} -U ${DB_USER} -tc \"SELECT 1 FROM pg_database WHERE datname = 'grafana'\" | grep -q 1 ||
      psql -h ${DB_HOST} -U ${DB_USER} -c \"CREATE DATABASE grafana;\"
      "
    environment:
      PGPASSWORD: ${DB_PASSWORD}
    networks:
      - go-money
        
  grafana:
    image: grafana/grafana:latest
    hostname: grafana
    container_name: grafana
    restart: always
    depends_on: 
      - db
      - db-init
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: ${DB_HOST}:5432
      GF_DATABASE_NAME: grafana
      GF_DATABASE_USER: ${DB_USER}
      GF_DATABASE_PASSWORD: ${DB_PASSWORD}
      GF_DATABASE_SSL_MODE: disable
      DB: ${DB_DB}
      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "127.0.0.1:${GRAFANA_PORT}:${GRAFANA_PORT}"
    networks:
      - go-money
    volumes:
      - grafana_data:/var/lib/grafana:rw
      - ./grafana/provisioning:/etc/grafana/provisioning:rw
  
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    environment:
      GRAFANA_EXTERNAL_HOST: ${GRAFANA_EXTERNAL_HOST}
      GO_MONEY_EXTERNAL_HOST: ${GO_MONEY_EXTERNAL_HOST}
      GRPC_PORT: ${GRPC_PORT}
      GRAFANA_PORT: ${GRAFANA_PORT}
    volumes:
      - ./traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./traefik/dynamic.yaml:/etc/traefik/dynamic.yaml:ro
    ports:
      - "0.0.0.0:${PUBLIC_PORT}:80"
#      - "127.0.0.1:8080:8080"
    networks:
      - go-money

volumes:
  grafana_data:

networks:
  go-money:
    driver: bridge
